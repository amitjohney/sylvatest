---
# Theses jobs are checking if we have some PolicyReportor ClusterPolicyReport
# in a FAIL, WARN, ERROR state. If some are detected the job loops over them
# to display the result and dump it into a file before failing

PolicyReport-check:
  stage: deployment-test
  extends:
    - .test-tags
  script:
    - echo -e "\e[1m\e[0Ksection_start:`date +%s`:kyverno[collapsed=true]\r\e[0KChecking policyReports\e[0m"
    - !reference [.import_functions]
    - download_artifact deploy-management-cluster management-cluster-kubeconfig
    - |
      error=0
      kubectl --kubeconfig management-cluster-kubeconfig get policyreport -A -o wide | tail -n +2 | awk '$6>0 || $7>0 || $8>0'  | while read -r NAMESPACE NAME OTHER; do
        echo -e "PolicyReport  \\e[1;91m$NAME\\e[0m in \\e[1;94m$NAMESPACE\\e[0m namespace was in \\e[31mFAIL/WARN/ERROR\\e[0m" | tee -a PolicyReport.log
        kubectl --kubeconfig management-cluster-kubeconfig -n $NAMESPACE get polr $NAME -o json | jq '.results[] | select(.result|test("pass|skip")|not)' | tee -a PolicyReport.log
        error=1
      done
      echo -e "\e[0Ksection_end:`date +%s`:kyverno\r\e[0K"
      exit $error
  artifacts:
    paths:
      - PolicyReport.log
    expire_in: 48 hour
    when: always

ClusterPolicyReport-check:
  stage: deployment-test
  extends:
    - .test-tags
  script:
    - echo -e "\e[1m\e[0Ksection_start:`date +%s`:kyverno[collapsed=true]\r\e[0KChecking ClusterPolicyReports\e[0m"
    - !reference [.import_functions]
    - download_artifact deploy-management-cluster management-cluster-kubeconfig
    - |
      error=0
      kubectl --kubeconfig management-cluster-kubeconfig get clusterpolicyreport -A -o wide | tail -n +2 | awk '$5>0 || $6>0 || $7>0'  | while read -r NAME OTHER; do
        echo -e "ClusterPolicyReport \\e[1;91m$NAME\\e[0m was in \\e[31mFAIL/WARN/ERROR\\e[0m" | tee -a ClusterPolicyReport.log
        kubectl --kubeconfig management-cluster-kubeconfig get clusterpolicyreport $NAME -o json | jq '.results[] | select(.result|test("pass|skip")|not)' | tee -a ClusterPolicyReport.log
        error=1
      done
      echo -e "\e[0Ksection_end:`date +%s`:kyverno\r\e[0K"
      exit $error
  artifacts:
    paths:
      - ClusterPolicyReport.log
    expire_in: 48 hour
    when: always
