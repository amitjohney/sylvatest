---
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'pipeline'  #  this is required to prevent that default workflow blocks the pipeline creation
    - if: $CI_PIPELINE_SOURCE == 'schedule' # Allow scheduled pipeline on dev branch with open MR
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'  # prevent branch pipeline when an MR is open (prefer MR pipeline)
      when: never
    - if: $CI_COMMIT_TAG
      variables:
        OCI_TAG_FORMAT: "$CI_COMMIT_TAG"
    - if: $CI_MERGE_REQUEST_ID
      variables:
        GITLEAKS_ARGS: '--verbose --log-opts=main..HEAD'
    - when: always

stages:
  - test
  - build
  - deploy
  - delete
  - gitleaks

default:
  tags:
    - gitlab-org-docker
  image: $CI_IMAGE

variables:
  GITLEAKS_ARGS: '--verbose'
  GITLEAKS_RULES: .gitleaks.toml
  RUNNER_GENERATE_ARTIFACTS_METADATA: "true"
  OCI_TAG_FORMAT: "0.0.0-git-$CI_COMMIT_SHORT_SHA"

gitleaks:
  rules:
    - when: never

# Customize gitleak job imported from to-be-continuous in order to checkout main
# (needed for git to be able to retrieve commits from this branch not in main)
gitleaks-custom:
  stage: gitleaks
  extends: gitleaks
  needs: []
  before_script:
    - git checkout main && git checkout -
    - !reference [gitleaks, before_script]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "pipeline"'
      when: never
    - when: always
