---
include:
  - local: .gitlab/ci/child-pipeline-default.yml
  - local: .gitlab/ci/templates-deployments.yml

#----------------------------------------------------------

create_runner:
  stage: .pre
  timeout: 15min
  id_tokens:
    JOB_ID_TOKEN:
      aud: runner-aas
  variables:
    REQUEST: create
    RUNNER_HOSTNAME: syla-core-$CI_PIPELINE_ID
    RUNNER_TAG: $CI_PIPELINE_IID
    RUNNER_PROJECT_ID: $CI_PROJECT_ID
  image:
    name: registry.gitlab.com/gitlab-org/cli:v1.35.0
    entrypoint: [""]
  script:
    - >
      curl -Ss -X POST --fail
      --form "token=$RUNNER_AAS_TOKEN"
      --form ref=main
      --form "variables[REQUEST]=$REQUEST"
      --form "variables[SOURCE_JWT_TOKEN]=$JOB_ID_TOKEN"
      "$CI_API_V4_URL/projects/51177405/trigger/pipeline" > pipeline.json
    - PIPELINE_ID=$(cat pipeline.json | python3 -c 'import json,sys;print(json.load(sys.stdin)["id"])')
    - echo "Pipeline triggered = $(cat pipeline.json | python3 -c 'import json,sys;print(json.load(sys.stdin)["web_url"])')"
    - >
      while true; do
        PIPELINE=$(glab api projects/51177405/pipelines/$PIPELINE_ID)
        PIPELINE_STATUS=$(echo $PIPELINE | python3 -c 'import json,sys;print(json.load(sys.stdin)["status"])')
        echo "PIPELINE_STATUS = $PIPELINE_STATUS"
        [[ $PIPELINE_STATUS == "" ]] && exit 1
        [[ $PIPELINE_STATUS == "failed" ]] && exit 1
        [[ $PIPELINE_STATUS == "success" ]] && break
        sleep 5
      done

#----------------------------------------------------------

.deploy-in-equinix:
  extends: .deploy-base
  timeout: 2h
  variables:
    DOCKER_HOST: ""
  tags:
    - $CI_PIPELINE_IID
    - equinix
  script:
    - !reference [.common-deployment, script_common]
    - ./bootstrap.sh environment-values/${ENV_NAME}
    - !reference [.common-deployment, post_deployment_common]

deploy-rke2-virt-m3:
  extends: .deploy-in-equinix
  rules:
    - if: $METAL3_PROVIDER == "sylva"
  artifacts:
    expose_as: rke2-capm3-virt

deploy-rke2-virt-m3-suse:
  extends: .deploy-in-equinix
  rules:
    - if: $METAL3_PROVIDER == "suse"
  artifacts:
    expose_as: rke2-capm3-virt-suse

#----------------------------------------------------------

.deploy-wc-in-equinix:
  extends: .deploy-wc-base
  timeout: 2h
  variables:
    DOCKER_HOST: ""
  tags:
    - $CI_PIPELINE_IID
    - equinix
  script:
    - !reference [.common-deployment, script_common]
    - ./apply-workload-cluster.sh environment-values/workload-clusters/${ENV_NAME}
    - !reference [.common-deployment, post_deployment_common]

deploy-wc-rke2-virt-m3:
  extends: .deploy-wc-in-equinix
  rules:
    - if: $METAL3_PROVIDER == "sylva"
  artifacts:
    expose_as: wc-rke2-capm3-virt-sylva

deploy-wc-rke2-virt-m3-suse:
  extends: .deploy-wc-in-equinix
  rules:
    - if: $METAL3_PROVIDER == "suse"
  artifacts:
    expose_as: wc-rke2-capm3-virt-suse

#----------------------------------------------------------

.apply-wc-in-equinix:
  extends: .deploy-wc-base
  timeout: 1h
  stage: update-wc
  script:
    - !reference [.common-deployment, script_common]
    - !reference [.common-deployment, update_values]
    - ./apply-workload-cluster.sh environment-values/workload-clusters/${ENV_NAME}
    - !reference [.common-deployment, post_deployment_common]
  variables:
    DOCKER_HOST: ""
    UPDATE_VALUES_FILE: $WC_APPLY_VALUES_FILE
  tags:
    - $CI_PIPELINE_IID
    - equinix

update-wc-rke2-virt-m3:
  extends: [.apply-wc-in-equinix]
  rules:
    - if: $METAL3_PROVIDER == "sylva"
  artifacts:
    expose_as: update-wc-rke2-capm3-virt-sylva

update-wc-rke2-virt-m3-suse:
  extends: [.apply-wc-in-equinix]
  rules:
    - if: $METAL3_PROVIDER == "suse"
  artifacts:
    expose_as: update-wc-rke2-capm3-virt-suse

#----------------------------------------------------------

.ensure_sylva_toolbox:
  - . tools/shell-lib/common.sh environment-values/${ENV_NAME}; echo_b
  - . ./bin/env

# Currently no workload cluster are created in capm3-virt test case
# test-workload-cluster-rke2-virt-m3:
#   extends:
#     - .test-workload-cluster
#   before_script:
#     - !reference [.ensure_sylva_toolbox]
#   tags:
#     - $CI_PIPELINE_IID
#     - equinix

test-login-rke2-virt-m3:
  extends:
    - .test-login
  before_script:
    - !reference [.ensure_sylva_toolbox]
    - |
      # install hurl
      HURL_VERSION=4.1.0
      curl -SsL https://github.com/Orange-OpenSource/hurl/releases/download/${HURL_VERSION}/hurl-${HURL_VERSION}-x86_64-unknown-linux-gnu.tar.gz | tar xvz -C /tmp
      mv /tmp/hurl-${HURL_VERSION}-x86_64-unknown-linux-gnu/hurl ./bin/hurl
  tags:
    - $CI_PIPELINE_IID
    - equinix

#----------------------------------------------------------

clean_runner:
  stage: delete
  extends: create_runner
  variables:
    REQUEST: delete
  when: always
