---
include:
  - local: .gitlab/ci/child-pipeline-default.yml
  - local: .gitlab/ci/templates-deployments.yml

default:
  tags:
    - $CI_PIPELINE_IID
    - equinix

#----------------------------------------------------------

create-runner:
  stage: .pre
  timeout: 15min
  id_tokens:
    JOB_ID_TOKEN:
      aud: runner-aas
  variables:
    REQUEST: create
    RUNNER_HOSTNAME: syla-core-$CI_PIPELINE_ID
    RUNNER_TAG: $CI_PIPELINE_IID
    RUNNER_PROJECT_ID: $CI_PROJECT_ID
  tags: []
  image:
    name: registry.gitlab.com/gitlab-org/cli:v1.35.0
    entrypoint: [""]
  script:
    - glab config set -g check_update false
    - >
      curl -Ss -X POST --fail
      --form "token=$RUNNER_AAS_TOKEN"
      --form ref=main
      --form "variables[REQUEST]=$REQUEST"
      --form "variables[SOURCE_JWT_TOKEN]=$JOB_ID_TOKEN"
      "$CI_API_V4_URL/projects/51177405/trigger/pipeline" > pipeline.json
    - PIPELINE_ID=$(cat pipeline.json | python3 -c 'import json,sys;print(json.load(sys.stdin)["id"])')
    - echo "Pipeline triggered = $(cat pipeline.json | python3 -c 'import json,sys;print(json.load(sys.stdin)["web_url"])')"
    - >
      while true; do
        PIPELINE=$(glab api projects/51177405/pipelines/$PIPELINE_ID)
        PIPELINE_STATUS=$(echo $PIPELINE | python3 -c 'import json,sys;print(json.load(sys.stdin)["status"])')
        echo "PIPELINE_STATUS = $PIPELINE_STATUS"
        [[ $PIPELINE_STATUS == "" ]] && exit 1
        [[ $PIPELINE_STATUS == "failed" ]] && exit 1
        [[ $PIPELINE_STATUS == "success" ]] && break
        sleep 5
      done


#----------------------------------------------------------

deploy-management-cluster:
  extends:
    - .deploy-management
  timeout: 2h

#----------------------------------------------------------

update-management-cluster:
  extends:
    - .update-management
  timeout: 2h

#----------------------------------------------------------

deploy-workload-cluster:
  extends:
    - .deploy-workload
  timeout: 2h

#----------------------------------------------------------

update-workload-cluster:
  extends:
    - .update-workload
  timeout: 1h

#----------------------------------------------------------

.ensure_sylva_toolbox:
  - . tools/shell-lib/common.sh environment-values/${ENV_NAME}; echo_b
  - . ./bin/env

# Currently no workload cluster are created in capm3-virt test case
# test-workload-cluster-rke2-virt-m3:
#   extends:
#     - .test-workload-cluster
#   before_script:
#     - !reference [.ensure_sylva_toolbox]
#   tags:
#     - $CI_PIPELINE_IID
#     - equinix

test-login:
  extends:
    - .test-login
  before_script:
    - !reference [.ensure_sylva_toolbox]
    - |
      # install hurl
      HURL_VERSION=4.1.0
      curl -SsL https://github.com/Orange-OpenSource/hurl/releases/download/${HURL_VERSION}/hurl-${HURL_VERSION}-x86_64-unknown-linux-gnu.tar.gz | tar xvz -C /tmp
      mv /tmp/hurl-${HURL_VERSION}-x86_64-unknown-linux-gnu/hurl ./bin/hurl

#----------------------------------------------------------

clean-runner:
  stage: delete
  extends: create-runner
  variables:
    REQUEST: delete
  when: always
