apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: eso-store-k8s-default
spec:
  provider:
    kubernetes:
      remoteNamespace: default # with this, the store is able to pull only from `default` namespace
      server:
       # url can be omitted and defaults to kubernetes.default
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          key: ca.crt
          namespace: default
      auth:
        serviceAccount:
          name: eso-store-default-sa
          namespace: default
  # conditions about namespaces in which the ClusterSecretStore is usable for ExternalSecrets
  conditions:
    - namespaces:
        - workload-cluster
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eso-store-default-role
  namespace: default
rules:
- apiGroups: [""]
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authorization.k8s.io
  resources:
  - selfsubjectrulesreviews
  verbs:
  - create
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eso-store-default-sa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eso-store-default-role-binding
  namespace: default
subjects:
- kind: ServiceAccount
  name: eso-store-default-sa
  namespace: default
roleRef:
  kind: Role
  name: eso-store-default-role
  apiGroup: rbac.authorization.k8s.io
