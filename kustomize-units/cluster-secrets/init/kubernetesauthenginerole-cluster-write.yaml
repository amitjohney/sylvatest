apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: cluster-secrets-kubernetesauthenginerole-secret-writer
  annotations:
    pod-policies.kyverno.io/autogen-controllers: none
    policies.kyverno.io/title: Generate a KubernetesAuthEngineRole for a cluster
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/category: Multi-Tenancy
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: KubernetesAuthEngineRole
    policies.kyverno.io/description: >-
      This policy injects a dedicated KubernetesAuthEngineRole object in the NS vault.
      It allows for the vault SA in a target NS to request Vault.

spec:
  generateExisting: true
  rules:
    - name: generateKubernetesAuthEngineRoleSecretWriter
      match:
        any:
          - resources:
              kinds:
                - cluster.x-k8s.io/v1beta1/Machine
      generate:
        synchronize: true
        apiVersion: redhatcop.redhat.io/v1alpha1
        kind: KubernetesAuthEngineRole
        name: "cluster-secret-writer-{{request.object.metadata.namespace}}"
        namespace: "vault"
        data:
          metadata:
            name: "cluster-secret-writer-{{request.object.metadata.namespace}}"
            namespace: "vault"
          spec:
            connection:
              tLSConfig:
                skipVerify: true  # not cool but refering tlsSecret does not work in release v0.8.13 - see https://gitlab.com/sylva-projects/sylva-core/-/issues/261
                #  name: vault-tls
              address: https://vault.vault.svc.cluster.local:8200
            authentication:
              path: kubernetes
              role: admin
              serviceAccount:
                name: vault
            path: kubernetes
            policies:
              - secret-writer
            targetServiceAccounts:
              - vault
            targetNamespaces:
              targetNamespaces:
                - "{{request.object.metadata.namespace}}"
            tokenTTL: 3600
