apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: default
spec:
  clusterNetwork:
    services:
      cidrBlocks: ["10.43.0.0/16"]
    pods:
      cidrBlocks: ["10.42.0.0/16"]
    serviceDomain: cluster.local
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
    kind: RKE2ControlPlane
    name: ${CLUSTER_NAME}-control-plane
    namespace: default
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
    kind: OpenStackCluster
    name: ${CLUSTER_NAME}
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
kind: RKE2ControlPlane
metadata:
  name: ${CLUSTER_NAME}-control-plane
  namespace: default
spec:
  rke2ConfigSpec:
    preRKE2Commands: []
    files:
    - path: /var/lib/rancher/rke2/server/manifests/ingress.yaml
      owner: "root:root"
      permissions: "0644"
      content: |
          ---
          apiVersion: helm.cattle.io/v1
          kind: HelmChartConfig
          metadata:
            name: rke2-ingress-nginx
            namespace: kube-system
          spec:
            valuesContent: |-
              controller:
                publishService:
                  enabled: true
                hostNetwork: false
                service:
                  enabled: true
                  loadBalancerIP: "${CLUSTER_EXTERNAL_IP}"
                  annotations:
                    metallb.universe.tf/allow-shared-ip: "${CLUSTER_EXTERNAL_IP}"
    - path: /var/lib/rancher/rke2/server/manifests/metallb.yaml
      owner: "root:root"
      permissions: "0644"
      content: |
          ---
          apiVersion: v1
          kind: Namespace
          metadata:
            name: metallb-system
          ---
          apiVersion: helm.cattle.io/v1
          kind: HelmChart
          metadata:
            name: metallb
            namespace: metallb-system
          spec:
            chart: metallb
            repo: https://metallb.github.io/metallb
            targetNamespace: metallb-system
            tolerations:
            - key: node.cloudprovider.kubernetes.io/uninitialized
              value: "true"
              effect: NoSchedule
            - effect: NoExecute
              key: node-role.kubernetes.io/etcd
            - effect: NoSchedule
              key: node-role.kubernetes.io/master
            - effect: NoSchedule
              key: node-role.kubernetes.io/control-plane
            nodeSelector:
              node-role.kubernetes.io/control-plane: "true"
            valuesContent: |-
              controller.nodeSelector:
                node-role.kubernetes.io/control-plane: "true"
              controller.tolerations:
                - key: node.cloudprovider.kubernetes.io/uninitialized
                  value: "true"
                  effect: NoSchedule
                - effect: NoExecute
                  key: node-role.kubernetes.io/etcd
                - effect: NoSchedule
                  key: node-role.kubernetes.io/master
                - effect: NoSchedule
                  key: node-role.kubernetes.io/control-plane
          ---
          apiVersion: metallb.io/v1beta1
          kind: IPAddressPool
          metadata:
            name: lbpool
            namespace: metallb-system
          spec:
            addresses:
              - ${CLUSTER_EXTERNAL_IP}/32
          ---
          apiVersion: metallb.io/v1beta1
          kind: L2Advertisement
          metadata:
            name: l2advertisement
            namespace: metallb-system
          spec:
            ipAddressPools:
            - lbpool
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: kubernetes-vip
            namespace: kube-system
            annotations:
              metallb.universe.tf/allow-shared-ip: "${CLUSTER_EXTERNAL_IP}"
          spec:
            type: LoadBalancer
            loadBalancerIP: ${CLUSTER_EXTERNAL_IP}
            ports:
            - name: https
              port: 6443
              protocol: TCP
              targetPort: 6443
            - name: rancher
              port: 9345
              protocol: TCP
              targetPort: 9345
            selector:
              component: kube-apiserver
    deployRKE2Commands:
      - "echo 'cni: calico' >> /etc/rancher/rke2/config.yaml"
      - systemctl daemon-reload
      - systemctl enable rke2-server.service
      - systemctl start rke2-server.service
      - ln -s /var/lib/rancher/rke2/bin/kubectl /usr/local/bin/kubectl
    serverConfig:
      tlsSan:
      - localhost
      - 127.0.0.1
    agentConfig:
      kubeletArgs:
        - "provider-id=openstack://{{ ds.meta_data.uuid }}"
  infrastructureTemplate:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
    kind: OpenStackMachineTemplate
    name: ${CLUSTER_NAME}-control-plane
    namespace: default
  replicas: ${CONTROL_PLANE_REPLICAS:=3}
  version: v1.24.4+rke2r1
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha1
kind: RKE2ConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-worker
  namespace: default
spec:
  template:
    spec:
      preRKE2Commands: []
      files: []
      deployRKE2Commands:
      - "echo 'cni: calico' >> /etc/rancher/rke2/config.yaml"
      - systemctl daemon-reload
      - systemctl enable rke2-agent.service
      - systemctl start rke2-agent.service
      agentConfig:
        nodeName: "{{ ds.meta_data.local_hostname }}"
        kubeletArgs:
          - "provider-id=openstack://{{ ds.meta_data.uuid }}"
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
  name: ${CLUSTER_NAME}-worker
  namespace: default
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: ${WORKER_REPLICAS:=0}
  selector:
    matchLabels: null
  template:
    spec:
      version: v1.24.4+rke2r1
      clusterName: ${CLUSTER_NAME}
      failureDomain: ${WORKER_AZ}
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha1
          kind: RKE2ConfigTemplate
          name: ${CLUSTER_NAME}-worker
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
        kind: OpenStackMachineTemplate
        name: ${CLUSTER_NAME}-worker
