# This example environment values files will let you build
# a Sylva two-node (1 control-plane + 1 worker) mgmt baremetal cluster
#
# To also have a workload-cluster, you can configure
# the workload-cluster unit based on what is in environment-values/rke2-capo-capm3
# which defines a capm3 workload cluster

cluster_external_ip: 192.168.100.2

cluster:
  capi_providers:
    infra_provider: capm3
    bootstrap_provider: cabpr

  control_plane_replicas: 1

  # Add kind container address to cluster kubernetes api certificate SubjectAltNames,
  # in order to be able to reach it from the outside through kubernetes-external service created by libvirt-metal unit
  # once pivot to management cluster will happen, this IP will be retrieved in a cluster-public-endpoint configMap created for that purpose
  cluster_api_cert_extra_SANs:
    - '{{ lookup "v1" "ConfigMap" "default" "cluster-public-endpoint" | dig "data" "address" (.Values._internal.bootstrap_node_ip | default "127.0.0.1") }}'

  rke2:
    additionalUserData:
      config:
        #cloud-config
        users:
          - name: sylva-user
            groups: users
            sudo: ALL=(ALL) NOPASSWD:ALL
            shell: /bin/bash
            lock_passwd: false
            passwd: $1$pdWEicWs$9ZWQf5.CWyXccmP8Chuu01 # sylva

  capm3:
    machine_image_url: http://os-image-server-ubuntu-jammy-plain-rke2-1-26-9.os-images.svc.cluster.local:8080/ubuntu-jammy-plain-rke2-1.26.9.qcow2
    machine_image_format: qcow2
    machine_image_checksum: http://os-image-server-ubuntu-jammy-plain-rke2-1-26-9.os-images.svc.cluster.local:8080/ubuntu-jammy-plain-rke2-1.26.9.qcow2.sha256sum
    machine_image_checksum_type: sha256
    public_pool_name: "public-pool"
    public_pool_network: 192.168.100.0
    public_pool_gateway: 192.168.100.1
    public_pool_start: 192.168.100.20
    public_pool_end: 192.168.100.50
    public_pool_prefix: "24"
    provisioning_pool_name: "provisioning-pool"
    provisioning_pool_network: 192.168.10.0
    provisioning_pool_gateway: 192.168.10.1
    provisioning_pool_start: 192.168.10.20
    provisioning_pool_end: 192.168.10.50
    provisioning_pool_prefix: "24"

    dns_server: 1.1.1.1

  control_plane:  # tweak network configuration as needed
    capm3:
      hostSelector:  # criteria for matching labels on BareMetalHost objects defined by baremetal_hosts value
        matchLabels:
          cluster-role: control-plane

      provisioning_pool_interface: ens5
      public_pool_interface: ens6

    network_interfaces:
      ens5:
        type: phy
        macAddress:
          fromHostInterface: '{{ .Values.metal3.provider | eq "suse" | ternary "eth1" "ens5" }}'
      ens6:
        type: phy
        macAddress:
          fromHostInterface: '{{ .Values.metal3.provider | eq "suse" | ternary "eth2" "ens6" }}'


  baremetal_host_default:
    bmh_metadata:
      labels:
        cluster-role: control-plane
    bmh_spec:
      online: true
      description: control plane node
      bmc:
        disableCertificateVerification: true
      bootMode: legacy
      automatedCleaningMode: disabled
      rootDeviceHints:
        deviceName: /dev/vda

  baremetal_hosts:  # corresponding credentials need to be set in secrets.yaml
    vbmh-0:
      bmh_spec:
        bmc:
          address: redfish-virtualmedia://vbmh-0.libvirt-metal.default.svc.cluster.local:8000/redfish/v1/Systems/4347b19b-67d0-4f0f-befe-114c0648af0a
        bootMACAddress: 48:df:37:e7:82:90
    # vbmh-1:
    #   bmh_spec:
    #     bmc:
    #       address: redfish-virtualmedia://vbmh-1.libvirt-metal.default.svc.cluster.local:8000/redfish/v1/Systems/4347b19b-67d0-4f0f-befe-114c0648af0a
    #     bootMACAddress: 48:df:37:e7:82:91
    # vbmh-2:
    #   bmh_spec:
    #     bmc:
    #       address: redfish-virtualmedia://vbmh-2.libvirt-metal.default.svc.cluster.local:8000/redfish/v1/Systems/4347b19b-67d0-4f0f-befe-114c0648af0a
    #     bootMACAddress: 48:df:37:e7:82:92


units:

  workload-cluster:
    enabled: false  # (no workload cluster is described in this example)

libvirt_metal:
  node_count: 1
  node_mem_gb: 12
  node_cpus: 8

#proxies:
#  # put your own proxy settings here if you need
#  http_proxy: ""
#  https_proxy: ""
#  no_proxy: ""

# configure containerd registry mirrors following https://github.com/containerd/containerd/blob/main/docs/hosts.md
# see charts/syla-units/values.yaml for a more detailled example
# registry_mirrors:
#   hosts_config:
#     docker.io:
#     - mirror_url: http://your.mirror/docker
