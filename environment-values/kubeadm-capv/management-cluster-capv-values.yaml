cluster:
  controlPlaneEndpoint:
    # -- IP or DNS name of the kubernetes endpoint
    host: # set the same value as ./values.yaml:cluster.cluster_external_ip
    # -- Kubernetes endpoint port
    port: 6443
  # -- Network CIDR for pods
  podCidrBlocks:
    - 192.168.0.0/16
  # -- Network CIDR for services
  servicesCidrBlocks:
    - 10.43.0.0/16


kubernetes:
  # -- Version of kubernetes
  version: v1.22.8
  kubeadm:
    controlPlane:
      # -- Additional files to create on the kubeadm control plane instances
      additionalFiles:
      - content: |
          [Service]
          Environment='HTTP_PROXY=< your http proxy >'
          Environment='HTTPS_PROXY=< your https proxy >'
          Environment='http_proxy=< your http proxy >'
          Environment='https_proxy=< your https proxy >'
          Environment='NO_PROXY=< your no proxy >'
          Environment='no_proxy=< your no proxy >'
        path: /etc/systemd/system/containerd.service.d/http-proxy.conf
      - content: |
          Acquire {
            HTTP::proxy '< your http proxy >';
            HTTPS::proxy '< your https proxy >';
          }
        path: /etc/apt/apt.conf.d/proxy.conf
      # -- Additional commands to execute on control plane before kubeadm join/init
      preKubeadmAdditionalCommands:
      - update-ca-certificates
      - systemctl daemon-reload
      - systemctl restart containerd
    workers:
      # -- Additional commands to execute on workers before kubeadm join/init
      preKubeadmAdditionalCommands:
      - update-ca-certificates
      - systemctl daemon-reload
      - systemctl restart containerd


# Vsphere VMs configuration
machines:
  # -- users to create on machines
  # see https://github.com/kubernetes-sigs/cluster-api/blob/main/bootstrap/kubeadm/api/v1beta1/kubeadmconfig_types.go#L257 for documentation about user config object
  users:
  - name: capv
    sshAuthorizedKeys:
    - ssh-rsa <your ssh key>
      <username>@<hostname>
    sudo: ALL=(ALL) NOPASSWD:ALL


  # Control plane VMs configuration
  controlPlane:
    # -- Number of control plane VMs instances
    replicas: 1
    # -- kube-vip version
    # Renovate Bot needs additional information to detect the kube-vip version:
    # renovate: registryUrl=https://ghcr.io image=kube-vip/kube-vip
    kubeVipVersion: v0.5.11
    # -- Control plane VSphere resource pool
    resourcePool: # replace me
    # -- Control plane VSphere machine template to clone, must contain kubeadm at the same version as specified in kubernetes.version
    template: # replace me
    # -- Control plane VSphere folder to store VM
    folder: # replace me
    # -- Control plane VSphere datastore to create/locate machine
    dataStore: # replace me
    # -- Control plane Number of vCPUs to allocate to controlPlane instances
    cpuCount: 2
    # -- Control plane Disk size of VM in GiB
    diskSizeGiB: 25
    # -- Control plane Memory to allocate to controlPlane VMs
    memorySizeMiB: 8192


  # -- Worker pools, more details on its configuration in [Worker pools configuration](#worker-pools-configuration)
  workers:
    # -- Name of the standard worker pool, you can define as many others pools as required
    worker-md-0:
      # -- Number of worker VMs instances
      replicas: 2
      # -- workers VSphere resource pool
      resourcePool: # replace me
      # -- workers VSphere machine template to clone, must contain kubeadm at the same version as specified in kubernetes.version
      template: # replace me
      # -- workers VSphere folder to store VM
      folder: # replace me
      # -- workers VSphere datastore to create/locate machine
      dataStore: # replace me
      # -- Number of vCPUs to allocate to worker instances
      cpuCount: 2
      # -- disk size of workers VM in GiB
      diskSizeGiB: 25
      # -- Memory to allocate to worker VMs
      memorySizeMiB: 8192
      # -- files to create on the workers instances of this pool
      files:
      - content: |
          [Service]
          Environment='HTTP_PROXY=< your http proxy >'
          Environment='HTTPS_PROXY=< your https proxy >'
          Environment='http_proxy=< your http proxy >'
          Environment='https_proxy=< your https proxy >'
          Environment='NO_PROXY=< your no proxy >'
          Environment='no_proxy=< your no proxy >'
        path: /etc/systemd/system/containerd.service.d/http-proxy.conf
      - content: |
          Acquire {
            HTTP::proxy '< your http proxy >';
            HTTPS::proxy '< your https proxy >';
          }
        path: /etc/apt/apt.conf.d/proxy.conf


# Storage class configuration
storageClass:
  # -- Create storage class
  enabled: true
  # -- Storage class name
  name: "default"
  # -- Define storage class as default class
  default: true
  # -- Storage class reclaimPolicy
  reclaimPolicy: "Delete"
