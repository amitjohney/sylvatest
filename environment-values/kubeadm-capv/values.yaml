---

git_repo_templates:
  capi-bootstrap:
    spec:
      url: https://gitlab.com/t6306/components/capi-bootstrap.git
      ref:
        commit: $CURRENT_COMMIT

components:
  capv:
    enabled: true
  cabpk:
    enabled: true
  capm3:
    enabled: management-only
  cabpr:  # RKE2
    enabled: management-only

  # TODO: do not share with egate
  flux-system:
    enabled: management-only

  management-cluster-flux:
    enabled: yes
    repo: capi-bootstrap
    kustomization_spec:
      path: ./kustomize-components/flux-system
      targetNamespace: flux-system
    labels:
      suspend-on-pivot: "yes"

  kubed:
    enabled: no

  metal3:
    enabled: management-only

  cluster:
    enabled: yes
    repo: capi-bootstrap
    labels:
      suspend-on-pivot: "yes"  # this component must be suspended before pivot
    depends_on:
    - name: capi
    - name: capv
    - name: cabpk
    kustomization_spec:
      # see note below under .cluster
      # the choice made here, for now, requires setting other values consistently under .cluster.xxx
      path: ./kustomize-components/cluster-manifests/kubeadm-capv/tim-lab
      postBuild:
        substituteFrom:
        - kind: ConfigMap
          name: cluster-vars
        - kind: Secret
          name: management-cluster-credentials
      healthChecks:
        - apiVersion: cluster.x-k8s.io/v1beta1
          kind: Cluster
          name: management-cluster
          namespace: default

cluster:
  name: management-cluster
  # TODO: derive kubeconfig secret name from this ^

  # image reference depends provider
  image: "ubuntu-2004-kube-v1.22.8"

  # for now, the choice below needs to be made
  # consistently with the choice of a matching kustomization path
  # for the 'cluster' component
  # e.g. you can use ./management-cluster-def/rke2-capd
  flavor:
    infra_provider: capv   # capv
    bootstrap_provider: cabpk  # RKE2 or kubeadm

  capv:
    # -- Datacenter to use
    dataCenter: # replace me
    # -- VSphere network for VMs and CSI
    network: # replace me
    # -- VSphere server dns name
    server: # replace me
    # -- VSphere https TLS thumbprint
    tlsThumbprint: # replace me
  metal3:
    ironic_ip: $IRONIC_IP

proxies:
  http_proxy: # replace me
  https_proxy: # replace me
  no_proxy: # replace me
