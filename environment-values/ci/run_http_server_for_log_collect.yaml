---
cluster:
  additional_commands:
    pre_bootstrap_commands:
      # Run a light http server for log collect in CI
      - |
        echo ">> Installing miniserve for log collection in CI"
        {{- if .Values.proxies.https_proxy }}
        export https_proxy={{ .Values.proxies.https_proxy }}
        export no_proxy={{ include "sylva-units.no_proxy" (tuple .) }}
        {{- end }}
        MINISERVE_VERSION=v0.27.1
        MINISERVE_URL=https://github.com/svenstaro/miniserve/releases/download/${MINISERVE_VERSION}/miniserve-${MINISERVE_VERSION#v}-x86_64-unknown-linux-musl
        curl -L --fail $MINISERVE_URL -o /usr/local/bin/miniserve || wget $MINISERVE_URL -O /usr/local/bin/miniserve || true
        chmod +x /usr/local/bin/miniserve || true
        /usr/local/bin/miniserve --enable-tar-gz --interfaces 0.0.0.0 --port 25888 --hidden /var/log >/var/log/miniserve.log 2>&1 &


# On capo bootstrap VM where is run the CI script must have access on port 25888 of all node VMs
units:
  capo-cluster-resources:
    kustomization_spec:
      _patches:
        - target:
            kind: HeatStack
          patch: |
            - op: replace
              path: /spec/heatStack/template/parameters/common_sg_rules
              value:
                type: json
                description: "Common security group rules associated with the control plane and worker VMs"
                default:
                  direction: [ingress, ingress, ingress, ingress, egress, ingress]
                  port: ['80', '443', '22', '53', '53', '25888']
                  protocol: [tcp, tcp, tcp, udp, udp, tcp]
                  remote_ip_prefix: [0.0.0.0/0, 0.0.0.0/0, 0.0.0.0/0, 0.0.0.0/0, 0.0.0.0/0, 0.0.0.0/0]
