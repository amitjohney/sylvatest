apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
- ../base
patches:
- patch: |-
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
    kind: OpenStackCluster
    metadata:
      name: ${CLUSTER_NAME}
      namespace: default
    spec:
      dnsNameservers:
      - 172.20.115.54
      network:
        id: ${CAPO_NETWORK_ID}
      apiServerFixedIP: ${CLUSTER_EXTERNAL_IP}
- patch: |-
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha1
    kind: RKE2ControlPlane
    metadata:
      name: ${CLUSTER_NAME}-control-plane
      namespace: default
    spec:
      rke2ConfigSpec:
        files:
        - path: /etc/resolvconf/resolv.conf.d/head
          owner: root
          permissions: "0644"
          content: |
            nameserver ${K8SGATEWAY_LB_IP}
        - path: /etc/apt/apt.conf.d/proxy.conf
          owner: root
          permissions: "0644"
          content: |
            Acquire::http::Proxy "${APT_PROXY}";
        - path: /usr/local/lib/systemd/system/rke2-server.env
          owner: root
          permissions: "0644"
          content: |
            HOME=/root
            CONTAINERD_HTTP_PROXY=${CONTAINERD_PROXY}
            CONTAINERD_HTTPS_PROXY=${CONTAINERD_PROXY}
            CONTAINERD_NO_PROXY=172.20.129.0/24,127.0.0.1,10.43.0.0/16,10.42.0.0/16
        - path: /var/lib/rancher/rke2/server/manifests/kube-vip.yaml
          owner: root:root
          permissions: "0644"
          content: |
            apiVersion: v1
            kind: Pod
            metadata:
              creationTimestamp: null
              name: kube-vip
              namespace: kube-system
            spec:
              containers:
              - args:
                - manager
                env:
                - name: svc_enable
                  value: "true"
                - name: vip_arp
                  value: "true"
                - name: port
                  value: "6443"
                - name: vip_cidr
                  value: "32"
                - name: cp_enable
                  value: "true"
                - name: cp_namespace
                  value: kube-system
                - name: vip_ddns
                  value: "false"
                - name: vip_leaderelection
                  value: "true"
                - name: vip_leaseduration
                  value: "5"
                - name: vip_renewdeadline
                  value: "3"
                - name: vip_retryperiod
                  value: "1"
                - name: address
                  value: ${CLUSTER_EXTERNAL_IP}
                - name: prometheus_server
                  value: :2112
                image: ghcr.io/kube-vip/kube-vip:v0.5.0
                imagePullPolicy: Always
                name: kube-vip
                resources: {}
                securityContext:
                  capabilities:
                    add:
                    - NET_ADMIN
                    - NET_RAW
                volumeMounts:
                - mountPath: /etc/kubernetes/admin.conf
                  name: kubeconfig
              hostAliases:
              - hostnames:
                - kubernetes
                ip: 127.0.0.1
              hostNetwork: true
              volumes:
              - hostPath:
                  path: /etc/rancher/rke2/rke2.yaml
                name: kubeconfig
        deployRKE2Commands:
        - sudo apt update
        - sudo apt -y -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confnew install resolvconf
        - sudo systemctl start resolvconf.service
        - sudo systemctl enable resolvconf.service
        - sudo systemctl restart resolvconf.service
        - sudo systemctl restart systemd-resolved.service
        - "echo 'cni: calico' >> /etc/rancher/rke2/config.yaml"
        - systemctl daemon-reload
        - systemctl enable rke2-server.service
        - systemctl start rke2-server.service
        - ln -s /var/lib/rancher/rke2/bin/kubectl /usr/local/bin/kubectl
      replicas: 1
- patch: |-
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
    kind: OpenStackMachineTemplate
    metadata:
      name: ${CLUSTER_NAME}-cp-template
      namespace: default
    spec:
      template:
        spec:
          rootVolume:
            diskSize: 80
            volumeType: ceph_sas
          ports:
            - network:
                id: ${CAPO_NETWORK_ID}
              allowedAddressPairs:
                - ipAddress: ${CLUSTER_EXTERNAL_IP}
