{
  "$schema": "https://json-schema.org/draft/2020-12/schema#",
  "title": "Schema for sylva-units chart values",
  "description": "---------------------------------------------------------------------- DO NOT EDIT THIS FILE AS JSON, THE YAML VERSION IS THE SOURCE OF TRUTH ----------------------------------------------------------------------",
  "$defs": {
    "gotpl": {
      "type": "string",
      "pattern": "^{{ .* }}$"
    },
    "username-password": {
      "anyOf": [
        {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "username",
            "password"
          ],
          "patternProperties": {
            "^(username|password)$": {
              "type": "string"
            }
          }
        },
        {
          "$ref": "#/$defs/gotpl"
        }
      ]
    },
    "boolean-string": {
      "type": "string",
      "enum": [
        "true",
        "false",
        ""
      ]
    },
    "enabled": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/$defs/gotpl"
        },
        {
          "$ref": "#/$defs/boolean-string"
        }
      ]
    },
    "string-with-gotpl": {
      "type": "string",
      "pattern": "(.|\\n)*{{(.|\\n)*}}(.|\\n)*"
    },
    "ipv4-cidr-full": {
      "type": "string",
      "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(?:\\/([1-9]|[12]\\d|3[012]))$"
    },
    "ipv4-range": {
      "type": "string",
      "pattern": "^(?:(?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\\.){3}(?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])-(?:(?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\\.){3}(?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])$"
    },
    "sylva-capi-cluster-values": {
      "type": "object"
    },
    "libvirt-metal-values": {
      "type": "object"
    },
    "unit_info": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "description"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "internal": {
          "type": "boolean"
        },
        "maturity": {
          "type": "string",
          "enum": [
            "core-component",
            "stable",
            "beta",
            "experimental"
          ]
        },
        "version": {
          "type": "string"
        },
        "hidden": {
          "type": "boolean"
        },
        "kustomization_path": {
          "type": "string"
        }
      }
    },
    "certificate": {
      "type": "string",
      "pattern": "^-----BEGIN CERTIFICATE-----"
    },
    "cert-and-key": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "cert": {
          "$ref": "#/$defs/certificate"
        },
        "key": {
          "type": "string",
          "pattern": "^-----BEGIN PRIVATE KEY-----"
        }
      },
      "anyOf": [
        {
          "required": [
            "cert",
            "key"
          ]
        },
        {
          "allOf": [
            {
              "not": {
                "required": [
                  "cert"
                ]
              }
            },
            {
              "not": {
                "required": [
                  "key"
                ]
              }
            }
          ]
        }
      ]
    }
  },
  "additionalProperties": false,
  "required": [
    "registry_secret",
    "git_repo_spec_default",
    "source_templates",
    "helm_repo_spec_default",
    "unit_kustomization_spec_default",
    "unit_helmrelease_spec_default",
    "unit_helmrelease_kustomization_spec_default",
    "units_enabled_default",
    "units",
    "cluster",
    "proxies",
    "env_type",
    "registry_mirrors"
  ],
  "properties": {
    "fullnameOverride": {
      "type": "string"
    },
    "nameOverride": {
      "type": "string"
    },
    "registry_secret": {
      "type": "object",
      "patternProperties": {
        "^[a-z0-9][a-z0-9.-]*[a-z0-9]$": {
          "anyOf": [
            {
              "type": "string",
              "pattern": "{{ .* }}"
            },
            {
              "$ref": "#/$defs/username-password"
            }
          ]
        }
      }
    },
    "git_repo_spec_default": {
      "type": "object"
    },
    "oci_repo_spec_default": {
      "type": "object"
    },
    "source_templates": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z0-9][a-z0-9.-]*[a-z0-9]$": {
          "type": "object",
          "additionalProperties": false,
          "anyOf": [
            {
              "required": [
                "spec",
                "kind"
              ]
            },
            {
              "required": [
                "existing_source"
              ]
            }
          ],
          "properties": {
            "existing_source": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "object",
                  "required": [
                    "name",
                    "kind"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "GitRepository",
                        "OCIRepository"
                      ]
                    },
                    "namespace": {
                      "type": "string"
                    }
                  }
                }
              ]
            },
            "auth": {
              "$ref": "#/$defs/username-password"
            },
            "kind": {
              "type": "string",
              "enum": [
                "GitRepository",
                "OCIRepository"
              ]
            },
            "spec": {
              "type": "object",
              "required": [
                "url",
                "ref"
              ],
              "properties": {
                "url": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "uri"
                    },
                    {
                      "$ref": "#/$defs/string-with-gotpl"
                    }
                  ]
                }
              }
            }
          },
          "allOf": [
            {
              "not": {
                "required": [
                  "auth"
                ],
                "properties": {
                  "spec": {
                    "required": [
                      "secretRef"
                    ]
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "kind": {
                    "const": "GitRepository"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "type": "object",
                    "properties": {
                      "ref": {
                        "type": "object",
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "branch"
                            ]
                          },
                          {
                            "required": [
                              "tag"
                            ]
                          },
                          {
                            "required": [
                              "commit"
                            ]
                          }
                        ],
                        "patternProperties": {
                          "(branch|tag|commit)": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "kind": {
                    "const": "OCIRepository"
                  }
                }
              },
              "then": {
                "properties": {
                  "spec": {
                    "type": "object",
                    "properties": {
                      "ref": {
                        "type": "object",
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "digest"
                            ]
                          },
                          {
                            "required": [
                              "semver"
                            ]
                          },
                          {
                            "required": [
                              "tag"
                            ]
                          }
                        ],
                        "patternProperties": {
                          "(digest|semver|tag)": {
                            "type": "string"
                          },
                          "branch": {
                            "const": "{{ tuple \"(unused)\" false | include \"set-only-if\" }}"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "helm_repo_spec_default": {
      "type": "object"
    },
    "unit_kustomization_spec_default": {
      "type": "object"
    },
    "unit_helmrelease_spec_default": {
      "type": "object"
    },
    "unit_helmrelease_kustomization_spec_default": {
      "type": "object"
    },
    "unit_definition_defaults": {
      "type": "object"
    },
    "unit_templates": {
      "type": "object",
      "^[a-z0-9][a-z0-9-]*[a-z0-9]$": {
        "type": "object"
      }
    },
    "units": {
      "type": "object",
      "patternProperties": {
        "^[a-z0-9][a-z0-9-]*[a-z0-9]$": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "$ref": "#/$defs/enabled"
            },
            "enabled_conditions": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/enabled"
              }
            },
            "info": {
              "$ref": "#/$defs/unit_info"
            },
            "unit_templates": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
              }
            },
            "repo": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "labels": {
              "type": "object",
              "patternProperties": {
                ".*": {
                  "type": "string"
                }
              }
            },
            "annotations": {
              "type": "object",
              "patternProperties": {
                ".*": {
                  "type": "string"
                }
              }
            },
            "depends_on": {
              "anyOf": [
                {
                  "type": "object",
                  "patternProperties": {
                    "^([a-z0-9][a-z0-9-]*[a-z0-9](/[a-z0-9][a-z0-9-]*[a-z0-9])?|{{ .* }})$": {
                      "anyOf": [
                        {
                          "type": "boolean"
                        },
                        {
                          "$ref": "#/$defs/gotpl"
                        }
                      ]
                    }
                  }
                },
                {
                  "$ref": "#/$defs/gotpl"
                }
              ]
            },
            "ref_override": {
              "type": "string"
            },
            "suspend": {
              "type": "boolean"
            },
            "kustomization_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/$defs/string-with-gotpl"
                }
              ]
            },
            "kustomization_spec": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string"
                },
                "_patches": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "object"
                      },
                      {
                        "$ref": "#/$defs/gotpl"
                      }
                    ]
                  }
                },
                "_components": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "allOf": [
                {
                  "not": {
                    "required": [
                      "dependsOn"
                    ]
                  }
                },
                {
                  "not": {
                    "required": [
                      "wait",
                      "healthChecks"
                    ],
                    "properties": {
                      "wait": {
                        "const": true
                      }
                    }
                  }
                },
                {
                  "not": {
                    "required": [
                      "sourceRef"
                    ]
                  }
                }
              ]
            },
            "helmrelease_spec": {
              "type": "object",
              "required": [
                "chart"
              ],
              "properties": {
                "chart": {
                  "type": "object",
                  "required": [
                    "spec"
                  ],
                  "properties": {
                    "spec": {
                      "type": "object",
                      "required": [
                        "chart"
                      ],
                      "properties": {
                        "chart": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "_postRenderers": {
                  "anyOf": [
                    {
                      "$ref": "#/$defs/string-with-gotpl"
                    },
                    {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object"
                          },
                          {
                            "$ref": "#/$defs/gotpl"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "not": {
                "required": [
                  "dependsOn"
                ]
              }
            },
            "helm_repo_url": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "(https?|oci)://.*"
                },
                {
                  "$ref": "#/$defs/gotpl"
                }
              ]
            },
            "helm_chart_versions": {
              "type": "object",
              "items": {
                "type": "boolean"
              }
            },
            "helm_chart_artifact_name": {
              "type": "string"
            },
            "helm_secret_values": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "$ref": "#/$defs/gotpl"
                }
              ]
            },
            "kustomization_substitute_secrets": {
              "type": "object",
              "additionalProperties": false,
              "patternProperties": {
                "^.*$": {
                  "type": "string"
                }
              }
            }
          },
          "dependentRequired": {
            "kustomization_substitute_secrets": [
              "kustomization_spec"
            ],
            "helm_secret_values": [
              "helmrelease_spec"
            ],
            "helm_repo_url": [
              "helmrelease_spec"
            ],
            "helm_chart_artifact_name": [
              "helmrelease_spec"
            ]
          },
          "required": [
            "info",
            "unit_templates"
          ],
          "allOf": [
            {
              "anyOf": [
                {
                  "required": [
                    "helmrelease_spec"
                  ]
                },
                {
                  "required": [
                    "kustomization_spec"
                  ]
                },
                {
                  "required": [
                    "unit_templates"
                  ]
                }
              ]
            },
            {
              "anyOf": [
                {
                  "properties": {
                    "enabled": {
                      "const": false
                    }
                  }
                },
                {
                  "allOf": [
                    {
                      "not": {
                        "required": [
                          "repo",
                          "helm_repo_url"
                        ],
                        "properties": {
                          "repo": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "if": {
                        "allOf": [
                          {
                            "not": {
                              "required": [
                                "helmrelease_spec"
                              ]
                            }
                          },
                          {
                            "not": {
                              "required": [
                                "unit_templates"
                              ]
                            }
                          }
                        ]
                      },
                      "then": {
                        "properties": {
                          "kustomization_spec": {
                            "allOf": [
                              {
                                "required": [
                                  "path"
                                ]
                              },
                              {
                                "anyOf": [
                                  {
                                    "required": [
                                      "wait"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "healthChecks"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      }
                    },
                    {
                      "if": {
                        "required": [
                          "helmrelease_spec"
                        ]
                      },
                      "then": {
                        "anyOf": [
                          {
                            "not": {
                              "required": [
                                "kustomization_spec"
                              ]
                            }
                          },
                          {
                            "not": {
                              "properties": {
                                "kustomization_spec": {
                                  "required": [
                                    "path"
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      }
    },
    "cluster": {
      "$ref": "#/$defs/sylva-capi-cluster-values"
    },
    "cluster_machines_ready": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "wait_timeout": {
          "type": "string",
          "pattern": "^[0-9]+[smh]"
        }
      }
    },
    "openstack": {
      "type": "object"
    },
    "metal3": {
      "type": "object"
    },
    "vsphere": {
      "type": "object"
    },
    "machine_pools": {
      "replicas": {
        "type": "integer"
      }
    },
    "capd_docker_host": {
      "type": "string",
      "format": "uri",
      "pattern": "^(unix|tcp)://.*"
    },
    "sriov": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "node_policies": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "resourceName",
              "numVfs",
              "nicSelector",
              "deviceType"
            ],
            "properties": {
              "nodeSelector": {
                "type": "object"
              },
              "resourceName": {
                "type": "string",
                "pattern": "^[a-z0-9][a-z0-9_.]*[a-z0-9]$"
              },
              "numVfs": {
                "type": "integer"
              },
              "deviceType": {
                "type": "string",
                "pattern": "^(netdevice|vfio-pci)$"
              },
              "nicSelector": {
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                  "deviceID": {
                    "type": "string"
                  },
                  "vendor": {
                    "type": "string",
                    "pattern": "^[0-9a-f]{4}$"
                  },
                  "pfNames": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "rootDevices": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "k8s_version_short": {
      "type": "string",
      "pattern": "^[1-9]+[0-9]*[.]([1-9]+[0-9]|0)*$"
    },
    "cluster_virtual_ip": {
      "type": "string",
      "format": "ipv4"
    },
    "admin_password": {
      "type": "string"
    },
    "cis_benchmark_scan_profile": {
      "type": "string"
    },
    "flux_webui": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "admin_user": {
          "type": "string"
        }
      }
    },
    "display_external_ip": {
      "type": "string"
    },
    "audit_log": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "level": {
          "type": "integer",
          "minimum": 0,
          "maximum": 3
        }
      }
    },
    "cluster_domain": {
      "anyOf": [
        {
          "type": "string",
          "format": "hostname"
        },
        {
          "$ref": "#/$defs/string-with-gotpl"
        }
      ]
    },
    "cluster_public_endpoint": {
      "anyOf": [
        {
          "type": "string",
          "pattern": "^(https?://.*|)$"
        },
        {
          "$ref": "#/$defs/gotpl"
        }
      ]
    },
    "external_hostnames": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "rancher": {
          "anyOf": [
            {
              "type": "string",
              "format": "hostname"
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        },
        "vault": {
          "anyOf": [
            {
              "type": "string",
              "format": "hostname"
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        },
        "keycloak": {
          "anyOf": [
            {
              "type": "string",
              "format": "hostname"
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        },
        "neuvector": {
          "anyOf": [
            {
              "type": "string",
              "format": "hostname"
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        },
        "harbor": {
          "anyOf": [
            {
              "type": "string",
              "format": "hostname"
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        },
        "flux": {
          "anyOf": [
            {
              "type": "string",
              "format": "hostname"
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        },
        "os_image_server": {
          "anyOf": [
            {
              "type": "string",
              "format": "hostname"
            },
            {
              "const": ""
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        },
        "gitea": {
          "anyOf": [
            {
              "type": "string",
              "format": "hostname"
            },
            {
              "const": ""
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        },
        "minio_operator_console": {
          "anyOf": [
            {
              "type": "string",
              "format": "hostname"
            },
            {
              "const": ""
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        },
        "minio_monitoring_tenant": {
          "anyOf": [
            {
              "type": "string",
              "format": "hostname"
            },
            {
              "const": ""
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        },
        "minio_monitoring_tenant_console": {
          "anyOf": [
            {
              "type": "string",
              "format": "hostname"
            },
            {
              "const": ""
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        },
        "thanos": {
          "anyOf": [
            {
              "type": "string",
              "format": "hostname"
            },
            {
              "const": ""
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        },
        "thanos_storegateway": {
          "anyOf": [
            {
              "type": "string",
              "format": "hostname"
            },
            {
              "const": ""
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        },
        "thanos_receive": {
          "anyOf": [
            {
              "type": "string",
              "format": "hostname"
            },
            {
              "const": ""
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        },
        "thanos_query": {
          "anyOf": [
            {
              "type": "string",
              "format": "hostname"
            },
            {
              "const": ""
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        },
        "loki": {
          "anyOf": [
            {
              "type": "string",
              "format": "hostname"
            },
            {
              "const": ""
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        }
      }
    },
    "external_certificates": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "cacert": {
          "$ref": "#/$defs/certificate"
        },
        "rancher": {
          "$ref": "#/$defs/cert-and-key"
        },
        "vault": {
          "$ref": "#/$defs/cert-and-key"
        },
        "keycloak": {
          "$ref": "#/$defs/cert-and-key"
        },
        "neuvector": {
          "$ref": "#/$defs/cert-and-key"
        },
        "harbor": {
          "$ref": "#/$defs/cert-and-key"
        },
        "flux": {
          "$ref": "#/$defs/cert-and-key"
        },
        "os_image_server": {
          "$ref": "#/$defs/cert-and-key"
        },
        "gitea": {
          "$ref": "#/$defs/cert-and-key"
        },
        "minio_operator": {
          "$ref": "#/$defs/cert-and-key"
        },
        "minio_monitoring_tenant": {
          "$ref": "#/$defs/cert-and-key"
        },
        "thanos": {
          "$ref": "#/$defs/cert-and-key"
        },
        "loki": {
          "$ref": "#/$defs/cert-and-key"
        }
      }
    },
    "keycloak": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "keycloak_expire_password_days": {
          "type": "integer"
        }
      }
    },
    "os_images": {
      "type": "object",
      "additionalProperties": false,
      "propertyNames": {
        "pattern": "^[a-z0-9][a-z0-9-]{1,50}[a-z0-9]$"
      },
      "patternProperties": {
        ".*": {
          "type": "object",
          "properties": {
            "uri": {
              "anyOf": [
                {
                  "type": "string",
                  "anyOf": [
                    {
                      "pattern": "^(https?://.*|)$"
                    },
                    {
                      "pattern": "^(oci://.*)$"
                    },
                    {
                      "pattern": "^{{ .Values.sylva_base_oci_registry }}/.*$"
                    }
                  ]
                },
                {
                  "$ref": "#/$defs/string-with-gotpl"
                }
              ]
            },
            "filename": {
              "type": "string"
            },
            "sha256": {
              "type": "string",
              "pattern": "[a-f0-9]*"
            },
            "os": {
              "type": "string"
            },
            "k8s-version": {
              "type": "string"
            },
            "k8s-flavor": {
              "type": "string",
              "pattern": "^(rke2|kubeadm)$"
            }
          },
          "required": [
            "uri",
            "filename"
          ]
        }
      }
    },
    "os_images_default_download_storage_space": {
      "type": "string",
      "pattern": "^[1-9]+[0-9]*Gi$"
    },
    "get_openstack_images_per_image_timeout_minutes": {
      "type": "number"
    },
    "libvirt_metal": {
      "$ref": "#/$defs/libvirt-metal-values"
    },
    "proxies": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "https?_proxy": {
          "type": "string",
          "pattern": "^(https?://.*|)$"
        },
        "no_proxy": {
          "type": "string"
        }
      },
      "required": [
        "http_proxy",
        "https_proxy",
        "no_proxy"
      ]
    },
    "ceph": {
      "cephfs_csi": {
        "type": "object",
        "additionalProperties": false,
        "patternProperties": {
          "clusterID": {
            "type": "string"
          },
          "fs_name": {
            "type": "string"
          },
          "adminID": {
            "type": "string"
          },
          "adminKey": {
            "type": "string"
          },
          "monitors_ips": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "ipv4"
            }
          }
        },
        "required": [
          "clusterID",
          "fs_name",
          "adminID",
          "adminKey",
          "monitors_ips"
        ]
      }
    },
    "no_proxy_additional": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        ".*": {
          "type": "boolean"
        }
      }
    },
    "sylva_base_oci_registry": {
      "anyOf": [
        {
          "type": "string",
          "format": "uri",
          "pattern": "^oci://.*$"
        },
        {
          "$ref": "#/$defs/string-with-gotpl"
        }
      ]
    },
    "sylva_core_oci_registry": {
      "anyOf": [
        {
          "type": "string",
          "format": "uri",
          "pattern": "^oci://.*$"
        },
        {
          "$ref": "#/$defs/string-with-gotpl"
        }
      ]
    },
    "os_images_oci_registries": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z0-9][a-z0-9.-]*[a-z0-9]$": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "url",
            "tag"
          ],
          "properties": {
            "url": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^oci://.*$"
                },
                {
                  "$ref": "#/$defs/string-with-gotpl"
                }
              ]
            },
            "tag": {
              "type": "string"
            }
          }
        }
      }
    },
    "oci_registry_extra_ca_certs": {
      "type": "string"
    },
    "oci_registry_insecure": {
      "type": "boolean"
    },
    "registry_mirrors": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "default_settings": {
          "type": "object"
        },
        "hosts_config": {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^[a-z0-9][a-z0-9.-]*[a-z0-9]$": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "registry_settings": {
                    "type": "object"
                  },
                  "mirror_url": {
                    "type": "string",
                    "format": "uri",
                    "pattern": "^(https?://.*|)$"
                  }
                }
              }
            }
          }
        }
      }
    },
    "units_enabled_default": {
      "type": "boolean"
    },
    "units_override_enabled": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "delete_hook": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        },
        "job_timeout": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        },
        "delete_timeout": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        }
      }
    },
    "env_type": {
      "type": "string",
      "pattern": "^(dev|ci|prod)$"
    },
    "ntp": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "enabled": {
          "type": "boolean"
        },
        "servers": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "hostname"
              }
            ]
          }
        }
      }
    },
    "sylva_diskimagebuilder_version": {
      "type": "string"
    },
    "sylva_diskimagebuilder_images": {
      "type": "object",
      "propertyNames": {
        "pattern": "^[a-z0-9][a-z0-9-]{1,50}[a-z0-9]$"
      },
      "patternProperties": {
        ".*": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "default_enabled": {
              "type": "boolean"
            },
            "os_images_oci_registry": {
              "type": "string"
            }
          }
        }
      }
    },
    "bootstrap_os_images_override_enabled": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[a-z0-9][a-z0-9-]{1,50}[a-z0-9]$"
      }
    },
    "additional_sylva_units_status_info": {
      "type": "object"
    },
    "security": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "calico_wireguard_enabled": {
          "type": "boolean"
        },
        "neuvector_scanning_enabled": {
          "type": "boolean"
        }
      }
    },
    "monitoring": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "thanos_receive_url": {
          "anyOf": [
            {
              "type": "string",
              "format": "uri"
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        },
        "alertmanager": {
          "type": "object",
          "properties": {
            "webhooks": {
              "type": "object",
              "properties": {
                "jiralert": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "env": {
                      "type": "object"
                    },
                    "config": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "defaults": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "api_url": {
                              "type": "string",
                              "pattern": "https?://.*"
                            },
                            "user": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "personal_access_token": {
                              "type": "string"
                            }
                          },
                          "oneOf": [
                            {
                              "required": [
                                "api_url",
                                "user",
                                "password"
                              ]
                            },
                            {
                              "required": [
                                "api_url",
                                "personal_access_token"
                              ]
                            }
                          ]
                        },
                        "receivers": {
                          "type": "array",
                          "additionalProperties": true,
                          "minItems": 1,
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "project": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "project"
                            ]
                          }
                        }
                      },
                      "required": [],
                      "dependencies": {
                        "receivers": [
                          "defaults"
                        ],
                        "defaults": [
                          "receivers"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "logging": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "loki_url": {
          "anyOf": [
            {
              "type": "string",
              "format": "uri"
            },
            {
              "$ref": "#/$defs/string-with-gotpl"
            }
          ]
        }
      }
    },
    "_internal": {
      "type": "object"
    },
    "third_party": {
      "type": "object"
    },
    "shared_workload_clusters_values": {
      "type": "object"
    },
    "shared_workload_clusters_secret_values": {
      "type": "object"
    },
    "snmp": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "devices": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "alias": {
                "type": "string",
                "format": "hostname"
              },
              "target": {
                "type": "string",
                "anyOf": [
                  {
                    "pattern": "^((tcp|udp)://.*|)$"
                  },
                  {
                    "format": "hostname"
                  }
                ]
              },
              "module": {
                "type": "string",
                "pattern": "^(dell_idrac|hp_cpq)$"
              },
              "auth": {
                "type": "string"
              },
              "cluster_name": {
                "type": "string"
              }
            }
          }
        },
        "auth": {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            ".+": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "version": {
                  "type": "integer",
                  "minimum": 2,
                  "maximum": 3
                },
                "community": {
                  "type": "string"
                },
                "security_level": {
                  "type": "string",
                  "pattern": "^(noAuthNoPriv|authNoPriv|authPriv)$"
                },
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "auth_protocol": {
                  "type": "string",
                  "pattern": "^(MD5|SHA|SHA224|SHA256|SHA384|SHA512)$"
                },
                "priv_protocol": {
                  "type": "string",
                  "pattern": "^(AES|AES192|AES256)$"
                },
                "priv_password": {
                  "type": "string"
                }
              },
              "if": {
                "properties": {
                  "version": {
                    "const": 3
                  }
                }
              },
              "then": {
                "required": [
                  "security_level",
                  "username",
                  "password",
                  "auth_protocol",
                  "priv_protocol",
                  "priv_password"
                ]
              }
            }
          }
        }
      }
    }
  },
  "allOf": [
    {
      "properties": {
        "cluster": {
          "properties": {
            "cluster_virtual_ip": {
              "const": "{{ .Values.cluster_virtual_ip }}"
            }
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "units": {
            "properties": {
              "cluster": {
                "properties": {
                  "enabled": {
                    "const": true
                  }
                }
              }
            }
          }
        }
      },
      "then": {
        "properties": {
          "units": {
            "properties": {
              "cluster": {
                "properties": {
                  "helmrelease_spec": {
                    "properties": {
                      "values": {
                        "not": {
                          "required": [
                            "helmrelease_spec"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "cluster": {
            "properties": {
              "capi_providers": {
                "properties": {
                  "infra_provider": {
                    "const": "capo"
                  }
                }
              }
            }
          }
        }
      },
      "then": {
        "properties": {
          "openstack": {
            "additionalProperties": false,
            "properties": {
              "floating_ip": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "type": "string",
                    "maxLength": 0
                  }
                ]
              },
              "storageClass": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              },
              "control_plane_affinity_policy": {
                "type": "string",
                "enum": [
                  "anti-affinity",
                  "soft-anti-affinity"
                ]
              },
              "worker_affinity_policy": {
                "type": "string",
                "enum": [
                  "anti-affinity",
                  "soft-anti-affinity"
                ]
              },
              "external_network_id": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "cluster": {
            "properties": {
              "capi_providers": {
                "properties": {
                  "infra_provider": {
                    "const": "capm3"
                  }
                }
              }
            }
          }
        }
      },
      "then": {
        "properties": {
          "metal3": {
            "additionalProperties": false,
            "properties": {
              "bootstrap_ip": {
                "type": "string",
                "format": "ipv4"
              },
              "external_bootstrap_ip": {
                "type": "string",
                "format": "ipv4"
              }
            }
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "cluster": {
            "properties": {
              "capi_providers": {
                "properties": {
                  "infra_provider": {
                    "const": "capv"
                  }
                }
              }
            }
          }
        }
      },
      "then": {
        "properties": {
          "vsphere": {
            "additionalProperties": false,
            "properties": {
              "vsphere-cpi": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "vsphere_conf": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "env_type": {
            "const": "prod"
          }
        }
      },
      "then": {
        "properties": {
          "admin_password": {
            "const": "{{ .Values._internal.default_password }}"
          }
        }
      }
    }
  ]
}
