# This file contains a JSONSchema to validate the values given
# as inputs to the chart.
#
# **** How to edit this file *****
#
# This file is encoded as YAML instead of JSON to allow comments,
# and make editing and diffing easier.
#
# The values.schema.json file is the file actually used by the Helm chart
# and MUST BE RECREATED after each modification of this file:
#
#   ./tools/generate_json_schema.py
#
# (a CI job is here to check that)
#
# You can test that this file is a valid JSONSchema with:
#
#   tools/generate_json_schema.py && python -m jsonschema -o pretty /usr/lib/python3/dist-packages/jsonschema/schemas/draft2020-12.json -i charts/sylva-units/values.schema.json
#
# (a CI job is here to check the same thing)
#
# **** How to test that values.yaml files conform to this schema ****
#
# Helm template will do this validation:
#
#   tools/generate_json_schema.py && helm template charts/sylva-units --values foo.yaml
#
# You can also use another JSONSchema validation tool (it's useful to have more detailed answers than what Helm produces):
#
#   To test the chart default values.yaml:
#
#      tools/generate_json_schema.py && \
#        tools/yaml2json.py < charts/sylva-units/values.yaml | python -m jsonschema -o pretty charts/sylva-units/values.schema.json -i /dev/stdin
#
#   To test the combination of the default values.yaml combined with other values files:
#
#      tools/generate_json_schema.py && \
#        tools/yaml-merge.py -o json charts/sylva-units/values.yaml foo.yaml | python -m jsonschema -o pretty charts/sylva-units/values.schema.json -i /dev/stdin
#


$schema: https://json-schema.org/draft/2020-12/schema#

title: Schema for sylva-units chart values

# this description is formatted so that it will appear very clearly
# in the JSON counterpart that the JSON isn't meant to be edited
description:
  ----------------------------------------------------------------------
  DO NOT EDIT THIS FILE AS JSON, THE YAML VERSION IS THE SOURCE OF TRUTH
  ----------------------------------------------------------------------

# sub-schemas used later on in the actual schema
$defs:
  gotpl:
    type: string
    pattern: "^{{ .* }}$"

  username-password:
    anyOf:
      - type: object
        additionalProperties: false
        patternProperties:
          "^(username|password)$":
            type: string
      - $ref: "#/$defs/gotpl"

  boolean-string:
    type: string
    enum: ["true", "false", ""]

  enabled:
    anyOf:
      - type: boolean
      - $ref: "#/$defs/gotpl"
      - $ref: "#/$defs/boolean-string"

  string-with-gotpl:
    type: string
    pattern: ".*{{ .* }}.*"

  ipv4-cidr-full:
    type: string
    pattern: ^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(?:\/([1-9]|[12]\d|3[012]))$

  ipv4-range:
    type: string
    pattern: ^(?:(?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\.){3}(?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])-(?:(?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\.){3}(?:[01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])$

  sylva-capi-cluster-values:
    # this sub-schema will be completed with actual sylva-capi-cluster-values with json schema generation
    type: object

# lines with '# -------------------------------' correspond to keys in values.yaml
# (the rest being the JSONSchema language itself)

additionalProperties: false

# the default values.yaml covers all required keys, so in general
# no top-level key will be missing, this check is here only to
# cover the case where a user would mistakenly remove one of them by "nulling" it
# (e.g. by setting `proxies:` without any subdict in override values)
required:
  - registry_secret
  - git_repo_spec_default
  - source_templates
  - helm_repo_spec_default
  - unit_kustomization_spec_default
  - unit_helmrelease_spec_default
  - unit_helmrelease_kustomization_spec_default
  - units_enabled_default
  - units
  - cluster
  - proxies
  - env_type
  - registry_mirrors

properties:

  fullnameOverride:  # -------------------------------
    type: string
  nameOverride:  # -------------------------------
    type: string

  registry_secret: # -------------------------------
    type: object
    patternProperties:
      "^[a-z0-9][a-z0-9.-]*[a-z0-9]$":  # -------------------------------
        anyOf:
          - type: string
            pattern: "{{ .* }}"
          - $ref: "#/$defs/username-password"

  git_repo_spec_default:  # -------------------------------
    type: object
    # (fields from a spec of a GitRepository Flux resource)

  oci_repo_spec_default:  # -------------------------------
    type: object
    # (fields from a spec of a OCIRepository Flux resource)

  source_templates:  # -------------------------------
    type: object
    additionalProperties: false
    patternProperties:

      "^[a-z0-9][a-z0-9.-]*[a-z0-9]$":  # -------------------------------
        type: object
        additionalProperties: false
        anyOf:
          - required:
            - spec
            - kind
          - required:
            - existing_source
        properties:

          existing_source:  # -------------------------------
            anyOf:
            - type: "null"
            - type: object
              # (fields from a spec of a Flux resource)
              required:
                - name
                - kind
              additionalProperties: false
              properties:

                name:  # -------------------------------
                  type: string

                kind: # -------------------------------
                  type: string
                  enum: ["GitRepository", "OCIRepository"]

                namespace:  # -------------------------------
                  type: string

          auth:  # -------------------------------
            $ref: "#/$defs/username-password"

          kind: # -------------------------------
            type: string
            enum: ["GitRepository", "OCIRepository"]

          spec:  # -------------------------------
            type: object
            # (fields from a spec of a Flux resource)
            required:
              - url
              - ref
            properties:

              url:  # -------------------------------
                anyOf:
                  - type: string
                    format: uri
                  - $ref: "#/$defs/string-with-gotpl"

            # prevent secretRef from being specified
            # because secretRef is generated by the chart
            not:
              required:
                - secretRef

        allOf:
        - if:
            properties:
              kind:
                const: GitRepository
          then:
            properties:
              spec:  # -------------------------------
                type: object
                properties:

                  ref:  # -------------------------------
                    type: object
                    additionalProperties: false
                    anyOf:
                      - required:
                        - branch
                      - required:
                        - tag
                      - required:
                        - commit
                    patternProperties:
                      '(branch|tag|commit)':  # -------------------------------
                        type: string

        - if:
            properties:
              kind:
                const: OCIRepository
          then:
            properties:
              spec:  # -------------------------------
                type: object
                properties:

                  ref:  # -------------------------------
                    type: object
                    additionalProperties: false
                    anyOf:
                      - required:
                        - digest
                      - required:
                        - semver
                      - required:
                        - tag
                    patternProperties:
                      '(digest|semver|tag)':  # -------------------------------
                        type: string
                      branch:  # -------------------------------
                        const: '{{ tuple "(unused)" false | include "set-only-if" }}'  # particular case to allow key deletion (see use-oci-artifacts.values.yaml)

  helm_repo_spec_default:  # -------------------------------
    type: object
    # this is a spec of a GitRepository Flux resource

  unit_kustomization_spec_default:  # -------------------------------
    type: object
    # TODO: detail more

  unit_helmrelease_spec_default:  # -------------------------------
    type: object
    # TODO: detail more

  unit_helmrelease_kustomization_spec_default:  # -------------------------------
    type: object
    # TODO: detail more

  unit_templates:  # -------------------------------
    type: object
    "^[a-z0-9][a-z0-9-]*[a-z0-9]$":  # -------------------------------
      type: object

  units:  # -------------------------------
    type: object
    patternProperties:

      "^[a-z0-9][a-z0-9-]*[a-z0-9]$":  # -------------------------------
        type: object
        additionalProperties: false
        properties:

          enabled:  # -------------------------------
            $ref: "#/$defs/enabled"

          enabled_conditions:
            type: array
            items:
              $ref: "#/$defs/enabled"

          unit_template:
            type: string
            pattern: "^[a-z0-9][a-z0-9-]*[a-z0-9]$"

          repo:  # -------------------------------
            anyOf:
              - type: string
              - type: "null"

          labels:  # -------------------------------
            type: object
            patternProperties:
              ".*":
                type: string

          annotations:  # -------------------------------
            type: object
            patternProperties:
              ".*":
                type: string

          depends_on:  # -------------------------------
            anyOf:
            - type: object
              patternProperties:
                "^([a-z0-9][a-z0-9-]*[a-z0-9](/[a-z0-9][a-z0-9-]*[a-z0-9])?|{{ .* }})$":  # a unit name, optionally prefixed by a namespace name (can be templated)
                  anyOf:
                    - type: boolean
                    - $ref: "#/$defs/gotpl"
            - $ref: "#/$defs/gotpl"

          ref_override:  # -------------------------------
            type: string

          kustomization_spec:  # -------------------------------
            type: object
            properties:
              path:  # -------------------------------
                type: string

              _patches:  # -------------------------------
                type: array
                items:
                  anyOf:
                  - type: object
                  - $ref: "#/$defs/gotpl"

              _components:  # -------------------------------
                type: array
                items:
                  type: string

            allOf:
              # prevent having dependsOn here (we want it at the upper level with 'depends_on')
              - not:
                  required:
                    - dependsOn
              # prevent having both "wait: true" and "healthChecks"
              # because in this case FluxCD Kustomize controller ignores "healthChecks"
              - not:
                  required:
                    - wait
                    - healthChecks
                  properties:
                    wait:
                      const: true
              # do not allow sourceRef (dynamically set by Helm template based on 'repo')
              - not:
                  required:
                    - sourceRef

          helmrelease_spec:  # -------------------------------
            type: object
            required:
              - chart
            properties:
              chart:  # -------------------------------
                type: object
                required:
                  - spec
                properties:
                  spec:  # -------------------------------
                    type: object
                    required:
                      - chart
                    properties:
                      chart:  # -------------------------------
                        type: string

              _postRenderers: # -------------------------------
                type: array
                items:
                  anyOf:
                  - type: object
                  - $ref: "#/$defs/gotpl"

            # prevent having dependsOn here (we want it at the upper level with 'depends_on')
            not:
              required:
                - dependsOn

          helm_repo_url:  # -------------------------------
            anyOf:
              - type: string
                pattern: (https?|oci)://.*
              - $ref: "#/$defs/gotpl"

          helm_chart_artifact_name:
            type: string

          helm_secret_values:  # -------------------------------
            anyOf:
              - type: object
              - $ref: "#/$defs/gotpl"

          kustomization_substitute_secrets:  # -------------------------------
            type: object
            additionalProperties: false
            patternProperties:
              "^.*$":
                type: string

        dependentRequired:
          kustomization_substitute_secrets:
            - kustomization_spec
          helm_secret_values:
            - helmrelease_spec
          helm_repo_url:
            - helmrelease_spec
          helm_chart_artifact_name:
            - helmrelease_spec

        allOf:
          - anyOf:  # require having at least helmrelease_spec or
                    # kustomization_spec, and allow having both
            - required:
              - helmrelease_spec
            - required:
              - kustomization_spec

          - anyOf:
            # for a unit which is explicitly disabled, we don't mandate anything else
            - properties:
                enabled:
                  const: false

            # ... for a unit which is explicitly enabled or conditionally enabled we enforce
            # the following:
            - allOf:

              # prevent having both 'repo' fully specified (not null) and 'helm_repo_url':
              - not:
                  required:
                    - repo
                    - helm_repo_url
                  properties:  # to allow 'helm_repo_url' when 'repo' is null (fail validation of this sub-schema only if repo is a string)
                    repo:
                      type: string

              # there are some things we need on kustomization_spec
              # but that aren't needed in the case where we specify helmrelease_spec
              # (see example where we need that under bootstrap.values.yaml:units.sylva-units)
              - if:
                  not:
                    required:
                      - helmrelease_spec
                then:
                  properties:
                    kustomization_spec:
                      allOf:
                        - required:
                          - path
                        - anyOf:  # force having either 'wait' or 'healthChecks'
                          - required:
                              - wait
                          - required:
                              - healthChecks

              # if helmrelease_spec is used then, kustomization_spec.path cannot be set
              - if:
                  required:
                    - helmrelease_spec
                then:
                  anyOf:
                    - not:
                        required: [kustomization_spec]
                    - not:
                        properties:
                          kustomization_spec:
                            required:
                              - path

  cluster:  # -------------------------------
    # the values are values of the sylva-capi-cluster chart
    # https://gitlab.com/sylva-projects/sylva-elements/helm-charts/sylva-capi-cluster
    $ref: "#/$defs/sylva-capi-cluster-values"

  openstack:  # -------------------------------
    type: object
    # actual constraints are later in this file under '# additional constraints for .openstack'

  metal3:  # -------------------------------
    type: object
    # actual constraints are later in this file under '# additional constraints for .metal3'

  capd_docker_host:  # -------------------------------
    type: string
    format: uri
    pattern: "^(unix|tcp)://.*"

  test_workload_cluster_name:  # -------------------------------
    type: string
    pattern: "^[a-z0-9][a-z0-9-]*[a-z0-9]$"

  sriov: # -------------------------------
    type: object
    additionalProperties: false
    properties:
      node_policies: # -------------------------------
        type: object
        additionalProperties:
          type: object
          additionalProperties: false
          required:
            - resourceName
            - numVfs
            - nicSelector
          properties:
            nodeSelector: # -------------------------------
              type: object
            resourceName: # -------------------------------
              type: string
              pattern: "^[a-z0-9][a-z0-9_.]*[a-z0-9]$"
            numVfs: # -------------------------------
              type: integer
            nicSelector: # -------------------------------
              type: object
              additionalProperties: false
              minProperties: 1
              properties:
                deviceID: # -------------------------------
                  type: string
                vendor: # -------------------------------
                  type: string
                  pattern: "^[0-9a-f]{4}$"
                pfNames: # -------------------------------
                  type: array
                  items:
                    type: string
                rootDevices: # -------------------------------
                  type: array
                  items:
                    type: string

  cluster_external_ip:  # -------------------------------
    type: string
    format: ipv4

  admin_password:  # -------------------------------
    type: string

  cis_benchmark_scan_profile:  # -------------------------------
    type: string

  flux_webui: # -------------------------------
    type: object
    additionalProperties: false
    properties:
      admin_user:  # -------------------------------
        type: string

  display_external_ip:  # ------------------------------
    type: string

  cluster_external_domain:  # -------------------------------
    type: string
    format: hostname

  rancher: # -------------------------------
    type: object
    additionalProperties: false
    properties:

      external_hostname:  # -------------------------------
        anyOf:
          - type: string
            format: hostname
          - $ref: "#/$defs/string-with-gotpl"

  vault: # -------------------------------
    type: object
    additionalProperties: false
    properties:

      external_hostname:  # -------------------------------
        anyOf:
          - type: string
            format: hostname
          - $ref: "#/$defs/string-with-gotpl"

  keycloak: # -------------------------------
    type: object
    additionalProperties: false
    properties:

      external_hostname:  # -------------------------------
        anyOf:
          - type: string
            format: hostname
          - $ref: "#/$defs/string-with-gotpl"

  flux: # -------------------------------
    type: object
    additionalProperties: false
    properties:

      external_hostname:  # -------------------------------
        anyOf:
          - type: string
            format: hostname
          - $ref: "#/$defs/string-with-gotpl"

  os_image_server: # -------------------------------
    type: object
    additionalProperties: false
    properties:

      external_hostname:  # -------------------------------
        anyOf:
          - type: string
            format: hostname
          - const: ''
          - $ref: "#/$defs/string-with-gotpl"

  os_images: # -------------------------------
    type: object

  proxies:  # -------------------------------
    type: object
    additionalProperties: false
    patternProperties:
      https?_proxy:  # -------------------------------
        type: string
        pattern: "^(https?://.*|)$"
      no_proxy:  # -------------------------------
        type: string
    required:
      - http_proxy
      - https_proxy
      - no_proxy

  no_proxy_additional:  # -------------------------------
    type: object
    additionalProperties: false
    patternProperties:
      ".*":
        type: boolean

  sylva_base_oci_registry:  # -------------------------------
    anyOf:
      - type: string
        format: uri
        pattern: "^oci://.*$"
      - $ref: "#/$defs/string-with-gotpl"

  sylva_core_oci_registry:  # -------------------------------
    anyOf:
      - type: string
        format: uri
        pattern: "^oci://.*$"
      - $ref: "#/$defs/string-with-gotpl"

  registry_mirrors:  # -------------------------------
    type: object
    additionalProperties: false
    properties:
      default_settings:  # -------------------------------
        type: object
      hosts_config:  # -------------------------------
        type: object
        additionalProperties: false
        patternProperties:
          "^[a-z0-9][a-z0-9.-]*[a-z0-9]$":  # -------------------------------
            type: array
            items:
              type: object
              additionalProperties: false
              properties:
                registry_settings: # -------------------------------
                  type: object
                mirror_url:  # -------------------------------
                  type: string
                  format: uri
                  pattern: "^(https?://.*|)$"

  units_enabled_default:  # -------------------------------
    type: boolean

  units_override_enabled:  # -------------------------------
    type: array
    items:
      type: string

  env_type:  # -------------------------------
    type: string
    pattern: "^(dev|ci|prod)$"

  ntp:  # -------------------------------
    type: object
    additionalProperties: false
    patternProperties:
      enabled:
        type: boolean
      servers:
        type: array
        items:
          anyOf:
            - type: string
              format: ipv4
            - type: string
              format: hostname

  _internal:  # -------------------------------
    type: object

  shared_workload_clusters_values:
    type: object

  shared_workload_clusters_secret_values:
    type: object


allOf:

  - # users cluster_external_ip must be set via .cluster_external_ip,
    # not via .cluster.cluster_external_ip
    properties:
      cluster:  # -------------------------------
        properties:
          cluster_external_ip:  # -------------------------------
            const: '{{ .Values.cluster_external_ip }}'  # only the value defined in values.yaml can be used

  # additional constraints for .openstack
  - if:
      properties:
        cluster:
          properties:
            capi_providers:
              properties:
                infra_provider:
                  const: capo
    then:
      properties:
        openstack:  # -------------------------------
          additionalProperties: false
          properties:
            floating_ip:  # -------------------------------
              anyOf:
                - type: string
                  format: ipv4
                - type: string
                  maxLength: 0

            storageClass:  # -------------------------------
              type: object
              additionalProperties: false
              properties:
                name:  # -------------------------------
                  type: string
                type:  # -------------------------------
                  type: string
              required:
                - type

            control_plane_affinity_policy:  # -------------------------------
              type: string
              enum:
                - anti-affinity
                - soft-anti-affinity

            worker_affinity_policy:  # -------------------------------
              type: string
              enum:
                - anti-affinity
                - soft-anti-affinity

            external_network_id:  # -------------------------------
              type: string

  # additional constraints for .metal3
  - if:
      properties:
        cluster:
          properties:
            capi_providers:
              properties:
                infra_provider:
                  const: capm3
    then:
      properties:
        metal3:  # -------------------------------
          additionalProperties: false
          properties:

            bootstrap_ip:  # -------------------------------
              type: string
              format: ipv4

            external_bootstrap_ip:  # -------------------------------
              type: string
              format: ipv4
