# This file contains a JSONSchema to validate the values given
# as inputs to the chart.
#
# **** How to edit this file *****
#
# This file is encoded as YAML instead of JSON to allow comments,
# and make editing and diffing easier.
#
# The values.schema.json file is the file actually used by the Helm chart
# and MUST BE RECREATED after each modification of this file:
#
#   tools/yaml2json.py < charts/sylva-units/values.schema.yaml > charts/sylva-units/values.schema.json
#
# (a CI job is here to check that)
#
# You can test that this file is a valid JSONSchema with:
#
#   tools/yaml2json.py < charts/sylva-units/values.schema.yaml > charts/sylva-units/values.schema.json && python -m jsonschema -o pretty /usr/lib/python3/dist-packages/jsonschema/schemas/draft2020-12.json -i charts/sylva-units/values.schema.json
#
# (a CI job is here to check the same thing)
#
# **** How to test that values.yaml files conform to this schema ****
#
# Helm template will do this validation:
#
#   tools/yaml2json.py < charts/sylva-units/values.schema.yaml > charts/sylva-units/values.schema.json && helm template charts/sylva-units --values foo.yaml
#
# You can also use another JSONSchema validation tool (it's useful to have more detailed answers than what Helm produces):
#
#   To test the chart default values.yaml:
#
#      tools/yaml2json.py < charts/sylva-units/values.yaml | python -m jsonschema -o pretty charts/sylva-units/values.schema.json -i /dev/stdin
#
#   To test the combination of the default values.yaml and another chart:
#
#      tools/yaml-merge.py -o json charts/sylva-units/values.yaml foo.yaml | python -m jsonschema -o pretty charts/sylva-units/values.schema.json -i /dev/stdin
#


# TODO:
#  - for Kustomization enforce that either "wait" or "healtChecks" is set

$schema: https://json-schema.org/draft/2020-12/schema#

title: Schema for sylva-units chart values

# this description is formatted so that it will appear very clearly
# in the JSON counterpart that the JSON isn't meant to be edited
description:
  ----------------------------------------------------------------------
  DO NOT EDIT THIS FILE AS JSON, THE YAML VERSION IS THE SOURCE OF TRUTH
  ----------------------------------------------------------------------

# sub-schemas used later on in the actual schema
$defs:
  gotpl:
    type: string
    pattern: "^{{ .* }}$"

  username-password:
    anyOf:
      - type: object
        additionalProperties: false
        patternProperties:
          "^(username|password)$":
            type: string
      - $ref: "#/$defs/gotpl"

  enabled:
    anyOf:
      - enum:
        - true
        - false
        - "yes"
        - "no"
        - "management-only"
      - $ref: "#/$defs/gotpl"


# lines with '# -------------------------------' correspond to keys in values.yaml
# (the rest being the JSONSchema language itself)

additionalProperties: false

# the default values.yaml covers all required keys, so in general
# no top-level key will be missing, this check is here only to
# cover the case where a user would mistakenly remove one of them by "nulling" it
# (e.g. by setting `proxies:` without any subdict in override values)
required:
  - phase
  - registry_secret
  - git_auth_default
  - git_repo_spec_default
  - git_repo_templates
  - helm_repo_spec_default
  - component_kustomization_spec_default
  - component_helmrelease_spec_default
  - component_helmrelease_kustomization_spec_default
  - components
  - cluster
  - proxies
  - component_default_enable
  - env_type_ci

properties:

  fullnameOverride:  # -------------------------------
    type: string
  nameOverride:  # -------------------------------
    type: string

  registry_secret: # -------------------------------
    type: object
    patternProperties:
      "^[a-z0-9][a-z0-9.-]*[a-z0-9]$":  # -------------------------------
        anyOf:
          - type: string
            pattern: "{{ .* }}"
          - $ref: "#/$defs/username-password"

  git_auth_default:  # -------------------------------
    $ref: "#/$defs/username-password"

  git_repo_spec_default:  # -------------------------------
    type: object
    # (fields from a spec of a GitRepository Flux resource)

  git_repo_templates:  # -------------------------------
    type: object
    additionalProperties: false
    patternProperties:

      "^[a-z0-9][a-z0-9.-]*[a-z0-9]$":  # -------------------------------
        type: object
        additionalProperties: false
        anyOf:
          - required:
            - spec
          - required:
            - existing_gitrepository
        properties:

          existing_gitrepository:  # -------------------------------
            type: string

          auth:  # -------------------------------
            $ref: "#/$defs/username-password"

          spec:  # -------------------------------
            type: object
            # (fields from a spec of a GitRepository Flux resource)
            required:
              - url
              - ref
            properties:

              url:  # -------------------------------
                type: string
                format: uri

              ref:  # -------------------------------
                type: object
                additionalProperties: false
                anyOf:
                  - required:
                    - branch
                  - required:
                    - tag
                  - required:
                    - commit
                patternProperties:
                  '(branch|tag|commit)':  # -------------------------------
                    type: string

            # prevent secretRef from being specified
            # because secretRef is generated by the chart
            not:
              required:
                - secretRef

  helm_repo_spec_default:  # -------------------------------
    type: object
    # this is a spec of a GitRepository Flux resource

  component_kustomization_spec_default:  # -------------------------------
    type: object
    # TODO: detail more

  component_helmrelease_spec_default:  # -------------------------------
    type: object
    # TODO: detail more

  component_helmrelease_kustomization_spec_default:  # -------------------------------
    type: object
    # TODO: detail more

  components:  # -------------------------------
    type: object
    patternProperties:

      "^[a-z0-9][a-z0-9-]*[a-z0-9]$":  # -------------------------------
        type: object
        additionalProperties: false
        properties:

          enabled:  # -------------------------------
            $ref: "#/$defs/enabled"

          repo:  # -------------------------------
            type: string

          labels:  # -------------------------------
            type: object
            patternProperties:
              ".*":
                type: string

          depends_on:  # -------------------------------
            type: array
            items:
              anyOf:
                - type: object
                  additionalProperties: false
                  required:
                    - name
                  properties:
                    name:  # -------------------------------
                      type: string
                      pattern: "^([a-z0-9][a-z0-9-]*[a-z0-9]|{{ .* }})$"
                - $ref: "#/$defs/gotpl"

          ref_override:  # -------------------------------
            type: string

          kustomization_spec:  # -------------------------------
            type: object
            properties:
              path:  # -------------------------------
                type: string

            # anyOf: # force having either 'wait' or 'healthChecks'
            #   - required:
            #       - wait
            #   - required:
            #       - healthChecks

            allOf:
              # prevent having dependsOn here (we want it at the upper level with 'depends_on')
              - not:
                  required:
                    - dependsOn
              # prevent having both "wait" and "healthChecks"
              - not:
                  required:
                    - wait
                    - healthChecks
              # do not allow sourceRef (dynamically set by Helm template based on 'repo')
              - not:
                  required:
                    - sourceRef

          helmrelease_spec:  # -------------------------------
            type: object
            required:
              - chart
            properties:
              chart:  # -------------------------------
                type: object
                required:
                  - spec
                properties:
                  spec:  # -------------------------------
                    type: object
                    required:
                      - chart
                    properties:
                      chart:  # -------------------------------
                        type: string

            # prevent having dependsOn here (we want it at the upper level with 'depends_on')
            not:
              required:
                - dependsOn

          helm_repo_url:  # -------------------------------
            type: string
            pattern: https?://.*

          helm_secret_values:  # -------------------------------
            type: object

          kustomization_substitute_secrets:  # -------------------------------
            type: object
            additionalProperties: false
            patternProperties:
              "^.*$":
                type: string

        dependentRequired:
          kustomization_substitute_secrets:
            - kustomization_spec
          helm_secret_values:
            - helmrelease_spec
          helm_repo_url:
            - helmrelease_spec

        anyOf:  # require having at least helmrelease_spec or
                # kustomization_spec, and allow having both
          - required:
            - helmrelease_spec
          - required:
            - kustomization_spec
          - properties:  # for a component which is forced disabled, we don't mandate anything
              enabled:
                const: false

        allOf:
          # prevent having both 'repo' and 'helm_repo_url':
          - not:
              required:
                - repo
                - helm_repo_url

          # require kustomization_spec.path, but only if helmrelease_spec
          # is not defined (see example where we need that under bootstrap.values.yaml:components.sylva-units)
          - if:
              not:
                required:
                  - helmrelease_spec
            then:
              properties:
                kustomization_spec:
                  required:
                    - path

          # if helmrelease_spec is used then, kustomization_spec.path cannot be set
          - if:
              required:
                - helmrelease_spec
            then:
              properties:
                kustomization_spec:
                  not:
                    required:
                      - path

  cluster:  # -------------------------------
    type: object
    additionalProperties: false
    required:
      - capi_providers
      - image
    properties:
      name:  # -------------------------------
        type: string
      admin_password:  # -------------------------------
        type: string
      image:  # -------------------------------
        type: string
      capi_providers:  # -------------------------------
        type: object
        additionalProperties: false
        properties:
          infra_provider:  # -------------------------------
            enum:
              - capd
              - capo
              - capv
              - capm3
          bootstrap_provider:  # -------------------------------
            enum:
              - cabpk
              - cabpr

      cluster_external_ip:  # -------------------------------
        type: string
        format: ip

      cis_benchmark_scan_profile:  # -------------------------------
        type: string

      flux_webui: # -------------------------------
        type: object
        additionalProperties: false
        properties:
          admin_user:  # -------------------------------
            type: string
          admin_password:  # -------------------------------
            type: string

      rancher: # -------------------------------
        type: object
        additionalProperties: false
        properties:

          external_hostname:  # -------------------------------
            type: string
            format: hostname

      vault: # -------------------------------
        type: object
        additionalProperties: false
        properties:

          external_hostname:  # -------------------------------
            type: string
            format: hostname

      capd:  # -------------------------------
        type: object
        additionalProperties: false
        properties:
          docker_host:  # -------------------------------
            type: string
            format: uri
            pattern: "^(unix|tcp)://.*"

      metal3:
        type: object
        properties:
          ironic_ip:
            type: string
            format: ip

      capo: # -------------------------------
        type: object

      test_workload_cluster_name:
        type: string
        pattern: "^[a-z0-9][a-z0-9-]*[a-z0-9]$"

    allOf:
      - if:
          properties:
            capi_providers:
              properties:
                infra_provider:
                  const: capo
        then:
          properties:
            capo:  # -------------------------------
              type: object
              additionalProperties: false
              properties:

                flavor_name:  # -------------------------------
                  type: string

                ssh_key_name:  # -------------------------------
                  type: string

                network_id:  # -------------------------------
                  type: string

                clouds_yaml:  # -------------------------------
                  type: object
                  additionalProperties: false
                  properties:

                    clouds:  # -------------------------------
                      type: object
                      additionalProperties: false
                      required:
                        - capo_cloud
                      patternProperties:

                        "(capo_cloud|.*)":  # -------------------------------
                          type: object
                          additionalProperties: true
                          required:
                            - auth
                          properties:

                            auth:  # -------------------------------
                              type: object
                              additionalProperties: true
                              required:
                                - auth_url
                                - username
                                - password
                                - project_name
                                - project_domain_name
                                - user_domain_name
                              properties:
                                auth_url:  # -------------------------------
                                  type: string
                                  format: uri
                                user_domain_name:  # -------------------------------
                                  type: string
                                project_domain_name:  # -------------------------------
                                  type: string
                                project_name:  # -------------------------------
                                  type: string
                                username:  # -------------------------------
                                  type: string
                                password:  # -------------------------------
                                  type: string
                                region:  # -------------------------------
                                  anyOf:
                                    - type: string
                                    - type: "null"
                            verify:  # -------------------------------
                              type: boolean

                cacert:  # -------------------------------
                  type: string

                storageClass:  # -------------------------------
                  type: object
                  additionalProperties: false
                  properties:
                    name:  # -------------------------------
                      type: string
                    type:  # -------------------------------
                      type: string

  proxies:  # -------------------------------
    type: object
    additionalProperties: false
    patternProperties:
      https?_proxy:  # -------------------------------
        type: string
        pattern: "^(https?://.*|)$"
      no_proxy:  # -------------------------------
        type: string
    required:
      - http_proxy
      - https_proxy
      - no_proxy

  phase:  # -------------------------------
    type: string
    enum:
      - management
      - bootstrap

  component_default_enable:  # -------------------------------
    $ref: "#/$defs/enabled"

  test_all_components_enabled:  # -------------------------------
    anyOf:
      - type: boolean
      - type: "null"

  env_type_ci:
    type: boolean

  dockerio_registry_mirror:
    type: string
    anyOf:
      - format: uri
      - const: ""
